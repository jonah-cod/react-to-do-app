{"version":3,"sources":["redux/types.js","components/form.js","redux/actions/actions.js","components/todo.js","components/todos.js","app.js","redux/reducers/todoReducers.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","MARK_COMPLETE","Form","dispatch","useDispatch","useState","title","setTitle","todo","id","Math","floor","random","isComplete","className","onSubmit","e","preventDefault","console","log","type","payload","add_todo","value","placeholder","onChange","target","Todo","style","textDecoration","onClick","background","Todos","todos","useSelector","state","length","map","App","initialState","todoReducers","filter","store","createStore","ReactDom","render","StrictMode","document","getElementById"],"mappings":"8LAAaA,EAAW,WACXC,EAAc,cACdC,EAAgB,gB,OCmCdC,EAjCF,WACb,IAAMC,EAAWC,cADE,EAGWC,mBAAS,IAHpB,mBAGRC,EAHQ,KAGDC,EAHC,KAKTC,EAAO,CACTC,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBN,QACAO,YAAY,GAYhB,OACI,sBAAKC,UAAU,OAAf,UACG,8CAEC,uBAAMA,UAAU,UAAUC,SAdnB,SAACC,GAChBA,EAAEC,iBACFC,QAAQC,IAAIb,GACA,KAATA,GACCH,EChBgB,SAACK,GACrB,MAAO,CACHY,KAAMrB,EACNsB,QAASb,GDaAc,CAASd,IAGtBD,EAAS,KAOD,UACI,uBAAOa,KAAK,OAAOG,MAAOjB,EAAOkB,YAAY,iBAAiBC,SAAU,SAACT,GAAKT,EAASS,EAAEU,OAAOH,UAChG,wBAAQH,KAAK,SAAb,wBEFDO,EAxBF,SAAC,GAAY,IAAXnB,EAAU,EAAVA,KACLL,EAAWC,cAYjB,OACI,sBAAKU,UAAU,OAAf,UACA,oBAAIc,MAAO,CAACC,eAAerB,EAAKK,WAAa,eAAiB,IAA9D,SAAqEL,EAAKF,QAC1E,sBAAKQ,UAAU,aAAf,UACA,wBAAQgB,QAdK,WDEM,IAACrB,ECDxBN,GDCwBM,ECDHD,EAAKC,GDEpB,CACFW,KAAMpB,EACNqB,QAASZ,MCST,oBACA,wBAAQqB,QAVS,WDII,IAACrB,ECH1BN,GDG0BM,ECHHD,EAAKC,GDItB,CACFW,KAAMnB,EACNoB,QAASZ,MCG0BmB,MAAO,CAACG,WAAWvB,EAAKK,WAAY,YAAa,IAApF,SAA0FL,EAAKK,WAAY,gBAAiB,qBCMrHmB,EAnBD,WAAO,IACVC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,KAA/BF,MAGP,OACI,sBAAKnB,UAAU,QAAf,UACI,0CACCmB,EAAMG,OAAQH,EAAMI,KAAI,SAAA7B,GAAI,OAE7B,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,OAGb,kECPA6B,G,MATH,WACR,OACI,sBAAKxB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,S,eCPNyB,EAAe,CACjBN,MAAM,IA2BKO,EAvBM,WAA0C,IAAzCL,EAAwC,uDAAhCI,EAAgC,yCAAjBnB,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC/C,OAAQD,GACJ,KAAKrB,EAED,OAAO,2BAAIoC,GAAX,IAAmBF,MAAM,GAAD,mBAAME,EAAMF,OAAZ,CAAmBZ,MAC/C,KAAKrB,EACD,OAAO,2BAAImC,GAAX,IAAkBF,MAAOE,EAAMF,MAAMQ,QAAO,SAACjC,GAAD,OAAQA,EAAKC,KAAKY,OAClE,KAAKpB,EAED,OAAO,2BAAIkC,GAAX,IAAkBF,MAAME,EAAMF,MAAMI,KAAI,SAAA7B,GAMpC,OAJGA,EAAKC,KAAOY,IACXb,EAAKK,YAAcL,EAAKK,YAGrBL,OAEf,QACI,OAAO2B,I,QClBJO,EAJDC,YAAYH,GCG1BI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAINK,SAASC,eAAe,W","file":"static/js/main.c079b82d.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\"\nexport const DELETE_TODO = \"DELETE_TODO\"\nexport const MARK_COMPLETE = \"MARK_COMPLETE\"\nexport const UNMARK_COMPLETE = \"UNMARK_COMPLETE\"","import React, { useState } from 'react'\nimport {useDispatch} from 'react-redux'\nimport {add_todo} from '../redux/actions/actions'\n\nconst Form = () => {\nconst dispatch = useDispatch()\n\n    const [title, setTitle] = useState(\"\");\n\n    const todo = {\n        id: Math.floor(Math.random()*1000000),\n        title,\n        isComplete: false\n    }\nconst handleSubmit=(e)=> {\n    e.preventDefault();\n    console.log(title);\n    if(title!== \"\"){\n        dispatch(add_todo(todo))\n    }\n    \n    setTitle(\"\")\n}\n\n    return (\n        <div className=\"head\">\n           <h2>My Todo-List</h2>\n            \n            <form className=\"addTodo\" onSubmit={handleSubmit}>\n                <input type=\"text\" value={title} placeholder=\"Type a todo...\" onChange={(e)=>{setTitle(e.target.value)}}/>\n                <button type=\"submit\">add</button>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default Form\n","import {ADD_TODO, DELETE_TODO, MARK_COMPLETE, UNMARK_COMPLETE} from '../types'\n\nexport const add_todo = (todo) => {\n    return {\n        type: ADD_TODO,\n        payload: todo\n    };\n};\n\nexport const delete_todo = (id)=>{\n    return{\n        type: DELETE_TODO,\n        payload: id,\n    };\n};\n\nexport const mark_complete = (id)=>{\n    return{\n        type: MARK_COMPLETE,\n        payload: id,\n    };\n};\n\nexport const unmark_complete = (id)=>{\n    return{\n        type: UNMARK_COMPLETE,\n        payload: id,\n    };\n};","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport {delete_todo, mark_complete} from '../redux/actions/actions'\n\nconst Todo = ({todo}) => {\n    const dispatch = useDispatch();\n    //delete dispatch\nconst handleDelete = ()=>{\n    dispatch(delete_todo(todo.id))\n}\n\n//mark done dispatch\nconst handle_Mark_Done = ()=>{\n    dispatch(mark_complete(todo.id))\n    \n}\n\n    return (\n        <div className=\"todo\">\n        <h4 style={{textDecoration:todo.isComplete ? \"line-through\" : \"\"}}>{ todo.title}</h4>\n        <div className=\"todoAction\">\n        <button onClick={handleDelete}>Delete</button>\n        <button onClick={handle_Mark_Done} style={{background:todo.isComplete? \"orangered\": \"\"}}>{todo.isComplete? \"Mark not Done\": \"Mark done\"}</button>\n        </div>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport Todo from './todo'\nimport { useState } from 'react'\n     \n\n\n\n\nconst Todos = () => {\n    const {todos} =  useSelector(state => state)\n\n    \n    return (\n        <div className=\"todos\">\n            <h3>My todos</h3>\n            {todos.length? todos.map(todo=>(\n                \n            <Todo key={todo.id} todo={todo}/>\n            )\n                \n            ): <h5>Your todos will appear here!</h5>}\n            \n            \n        </div>\n    )\n}\n\nexport default Todos\n","import React from 'react'\nimport Form from './components/form'\nimport Todos from './components/todos'\nimport './app.css'\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Form/>\n            <Todos/>\n        </div>\n    )\n}\n\nexport default App\n","import {ADD_TODO, DELETE_TODO, MARK_COMPLETE} from '../types'\n\nconst initialState = {\n    todos:[]\n};\n\n\nconst todoReducers = (state = initialState, {type, payload})=>{\n    switch (type) {\n        case ADD_TODO:\n            \n            return {...state,  todos: [...state.todos, payload]};\n        case DELETE_TODO:\n            return {...state, todos: state.todos.filter((todo)=>todo.id!==payload)}\n        case MARK_COMPLETE:\n            \n            return {...state, todos:state.todos.map(todo=>{\n\n                if(todo.id === payload){\n                    todo.isComplete = !todo.isComplete;\n                    \n                }\n                return todo;\n            })}\n        default:\n            return state;\n    }\n    \n}\n\nexport default todoReducers;","import todoReducers from './reducers/todoReducers'\nimport {createStore} from 'redux'\n\nconst store = createStore(todoReducers\n    );\n    \n\nexport default store","import React from 'react'\nimport ReactDom from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './app'\nimport store from './redux/store'\n\nReactDom.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>\n    \n    , document.getElementById(\"root\")\n)\n"],"sourceRoot":""}